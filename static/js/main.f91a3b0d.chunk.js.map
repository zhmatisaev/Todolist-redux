{"version":3,"sources":["store/actions/index.jsx","store/reducers/counter.reducer.js","store/actions/todoList.js","store/reducers/todoList.reducer.js","store/reducers/index.js","components/TodoItem/index.jsx","components/TodoList/index.jsx","App.js","index.js"],"names":["INCREASE_COUNT","DECREASE_COUNT","initialState","count","ADD_TODO","TOGGLE_TODO","DELETE_TODO","text","complete","combineReducers","todoList","state","action","type","payload","map","todo","id","filter","el","counter","TodoItem","dispatch","useDispatch","style","display","textDecoration","onClick","toggle_todo","delete_todo","styles","width","margin","TodoList","useState","inputValue","setInputValue","useSelector","placeholder","value","onChange","e","target","store","createStore","rootReducer","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MAAaA,G,YAAiB,kBACjBC,EAAiB,iB,qBCExBC,EAAe,CACnBC,MAAO,G,gBCJIC,EAAW,WACXC,EAAc,cACdC,EAAc,cCArBJ,EAAe,CACjB,CACIK,KAAM,iBACNC,UAAU,GAEd,CACID,KAAM,cACNC,UAAU,ICLHC,cAAiB,CAC5BC,SDO4B,WAAmC,IAAlCC,EAAiC,uDAAzBT,EAAcU,EAAW,uCAC9D,OAAQA,EAAOC,MACX,KAAKT,EACD,MAAM,GAAN,mBACOO,GADP,CAEI,CACIJ,KAAMK,EAAOE,QACbN,UAAU,KAGtB,KAAKH,EACD,OAAOM,EAAMI,KAAI,SAACC,EAAMC,GACrB,OAAOA,IAAOL,EAAOE,QAAd,2BAA6BE,GAA7B,IAAmCR,UAAWQ,EAAKR,WAAaQ,KAE9E,KAAKV,EACD,OAAOK,EAAMO,QAAO,SAACC,EAAGF,GACpB,OAAOA,IAAOL,EAAOE,WAG7B,QACI,OAAOH,IC1BfS,QHA0B,WAAmC,IAAlCT,EAAiC,uDAAzBT,EAAcU,EAAW,uCAC9D,OAAQA,EAAOC,MACb,KAAKb,EACH,MAAO,CAAEG,MAAOQ,EAAMR,MAAQ,GAChC,KAAKF,EACH,MAAO,CAAEE,MAAOQ,EAAMR,MAAQ,GAChC,QACE,OAAOQ,M,QIoBEU,EA3BG,SAAC,GAAiB,IAAhBL,EAAe,EAAfA,KAAMC,EAAS,EAATA,GAEhBK,EAAWC,cAErB,OAAO,sBAAKC,MAAO,CAACC,QAAS,QAAtB,UAEH,sBAAMD,MAAO,CACEE,eAAgBV,EAAKR,SAAW,eAAiB,QADhE,SAGGQ,EAAKT,OAER,wBAAQoB,QAAS,kBAAKL,EHPC,SAACL,GAAD,MAAS,CAChCJ,KAAMR,EACNS,QAASG,GGKsBW,CAAYX,KAA3C,sBACA,wBAAQU,QAAS,kBAAKL,EHHC,SAACL,GAAD,MAAS,CAChCJ,KAAMP,EACNQ,QAASG,GGCsBY,CAAYZ,KAA3C,wBCqBEa,EAAS,CACXC,MAAO,QACPC,OAAQ,UAMGC,EAvCE,WAAO,IAAD,EACiBC,mBAAS,IAD1B,mBACZC,EADY,KACAC,EADA,KAGbzB,EAAQ0B,aAAY,SAAC1B,GAAD,OAAWA,EAAMD,YACrCY,EAAWC,cAMjB,OAAO,sBAAKC,MAAOM,EAAZ,UACH,gCACI,uBAEIQ,YAAY,iBACZC,MAAOJ,EACPK,SAAU,SAACC,GAAD,OAAOL,EAAcK,EAAEC,OAAOH,UAK5C,wBAAQZ,QAAS,kBAAKL,EJxBC,CAC/BT,KAAMT,EACNU,QIsBgDqB,KAAxC,oBAGJ,6BACKxB,EAAMI,KAAI,SAACC,EAAMC,GACd,OAAO,cAAC,EAAD,CAAUD,KAAMA,EAAMC,GAAIA,GAASA,YCxBpD0B,EAAQC,YAAYC,GAcXC,MAbf,WAIE,OACE,cAAC,IAAD,CAAUH,MAAOA,EAAjB,SAGC,cAAC,EAAD,OCdLI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f91a3b0d.chunk.js","sourcesContent":["export const INCREASE_COUNT = \"INCREASE_COUNT\";\r\nexport const DECREASE_COUNT = \"DECREASE_COUNT\";\r\nexport const increaseCount = () => ({\r\n  type: INCREASE_COUNT,\r\n});\r\nexport const decreaseCount = () => ({\r\n  type: DECREASE_COUNT,\r\n});","import { INCREASE_COUNT, DECREASE_COUNT } from \"../actions\";\r\n\r\n\r\nconst initialState = {\r\n  count: 0,\r\n};\r\nexport const counterReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case INCREASE_COUNT:\r\n      return { count: state.count + 1 };\r\n    case DECREASE_COUNT:\r\n      return { count: state.count - 1 };\r\n    default:\r\n      return state;\r\n  }\r\n};","export const ADD_TODO = 'ADD_TODO'\r\nexport const TOGGLE_TODO = 'TOGGLE_TODO'\r\nexport const DELETE_TODO = 'DELETE_TODO'\r\n\r\n\r\nexport const add_todo = (text) => ({\r\n    type: ADD_TODO,\r\n    payload: text\r\n})\r\n\r\nexport const toggle_todo = (id) => ({\r\n    type: TOGGLE_TODO,\r\n    payload: id\r\n})\r\n\r\nexport const delete_todo = (id) => ({\r\n    type: DELETE_TODO,\r\n    payload: id\r\n})\r\n\r\n\r\n","import { ADD_TODO, DELETE_TODO, TOGGLE_TODO } from '../actions/todoList'\r\n\r\nconst initialState = [\r\n    {\r\n        text: 'go to the shop',\r\n        complete: false,\r\n    },\r\n    {\r\n        text: 'do homeTask',\r\n        complete: false,\r\n    },\r\n];\r\nexport const todoList_reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_TODO:\r\n            return [\r\n                ...state,\r\n                {\r\n                    text: action.payload,\r\n                    complete: false\r\n                }\r\n            ]\r\n        case TOGGLE_TODO:\r\n            return state.map((todo, id) => {\r\n               return id === action.payload ? { ...todo, complete: !todo.complete } : todo;\r\n            })\r\n        case DELETE_TODO:\r\n            return state.filter((el,id) => {\r\n                return id !== action.payload\r\n            })\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {combineReducers} from 'redux'\r\nimport {counterReducer} from './counter.reducer'\r\nimport {todoList_reducer} from './todoList.reducer'\r\n\r\nexport default combineReducers ({\r\n    todoList: todoList_reducer,\r\n    counter: counterReducer,\r\n})","import React from 'react'\r\n// import { connect } from 'react-redux'\r\nimport {toggle_todo, delete_todo} from '../../store/actions/todoList'\r\nimport {useDispatch} from 'react-redux'\r\n\r\n\r\n const TodoItem = ({todo, id }) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\nreturn <div style={{display: 'flex'}}>\r\n            \r\n    <span style={{\r\n                   textDecoration: todo.complete ? 'line-through' : 'none'}\r\n\r\n    }>{todo.text}</span>\r\n\r\n    <button onClick={() =>dispatch(toggle_todo(id))}>Complete</button>\r\n    <button onClick={() =>dispatch(delete_todo(id))}>Delete</button>\r\n\r\n</div>\r\n}\r\n\r\nconst styles = {\r\n    display: 'flex',\r\n    justifyContent: 'space-between'\r\n}\r\n\r\n// const mapDispatchtoProps = dispatch => ({\r\n//     toggle_todo: (id) => dispatch(toggle_todo(id)),\r\n//     delete_todo: (id) => dispatch(delete_todo(id)),\r\n\r\n// })\r\nexport default TodoItem\r\n\r\n","import React from 'react'\r\nimport { useState } from 'react'\r\n// import { bindActionCreators } from 'redux'\r\nimport  TodoItem  from '../TodoItem'\r\nimport {useDispatch , useSelector} from 'react-redux'\r\nimport {add_todo} from '../../store/actions/todoList'\r\n\r\n\r\nconst TodoList = () => {\r\n    const [inputValue, setInputValue] = useState('');\r\n    \r\n    const state = useSelector((state) => state.todoList)\r\n    const dispatch = useDispatch()\r\n\r\n\r\n\r\n    // console.log(state) \r\n\r\n    return <div style={styles}>\r\n        <div>\r\n            <input\r\n\r\n                placeholder=\"type smth ... \"\r\n                value={inputValue}\r\n                onChange={(e) => setInputValue(e.target.value)\r\n\r\n                }\r\n                \r\n            />\r\n            <button onClick={() =>dispatch(add_todo(inputValue))}>Add</button>\r\n\r\n        </div>\r\n        <ul>\r\n            {state.map((todo, id) => {\r\n                return <TodoItem todo={todo} id={id} key={id} />\r\n            })}\r\n        </ul>\r\n    </div>\r\n}\r\nconst styles = {\r\n    width: '500px',\r\n    margin: '0 auto'\r\n}\r\n\r\n\r\n\r\n\r\nexport default TodoList","import \"./App.css\";\nimport Counter  from \"./components/Counter/index\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport rootReducer from './store/reducers'\nimport  TodoList from './components/TodoList'\nimport {useState} from 'react'\n\n// import Todo from './components/TodoItem'\n \nconst store = createStore(rootReducer);\nfunction App() {\n\n// const [switchComponent , setSwitch] =useState(false)\n\n  return (\n    <Provider store={store}>\n      {/* <button style={{marginBottom: 20}} onclick={() => setSwitch(!switchComponent)}> switch</button>\n     {switchComponent ? <Counter/> : <TodoList/>} */}\n     <TodoList/>\n     {/* <Counter/> */}\n    </Provider>\n  );\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}